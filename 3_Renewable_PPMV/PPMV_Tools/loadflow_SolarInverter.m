%% Search for a specified operating point for the model - SolarInverter_VFreplay.
%
% This MATLAB script is the command line equivalent of the specification
% tab in the Steady State Manager with current specifications and options.
% It produces the exact same operating points as hitting the Trim button.

% MATLAB(R) file generated by MATLAB(R) 9.6 and Simulink Control Design (TM) 5.3.
%
% Generated on: 23-Sep-2019 08:42:41

%% Specify the model name
model = bdroot;

%% Create the operating point specification object.
opspec = operspec(model);

%% Set the constraints on the states in the model.
% - The defaults for all states are Known = false, SteadyState = true,
%   Min = -Inf, Max = Inf, dxMin = -Inf, and dxMax = Inf.

% VF Replay States - Non-Steady State
bNames = cell(numel(opspec.getstatestruct.signals),1);
for l = 1: numel(opspec.getstatestruct.signals)   
    bNames{l} = opspec.getstatestruct.signals(l).blockName;
end
idxVF = find(~cellfun(@isempty,regexpi(bNames,'theta integrator')));
for l = 1:numel(idxVF)
    opspec.States(idxVF(l)).SteadyState = false;
end

% State (9) - SolarInverter_VFreplay/Renewable Grid-Connection/Q Current Filter/1//(taus+1)/Integrator
% - Default model initial conditions are used to initialize optimization.
% opspec.States(9).Min = -999.9;
% opspec.States(9).Max = 999.9;

% State (14) - SolarInverter_VFreplay/Utility-scale Solar Electrical Controller/Reference Power Filter/1//(taus+1)/Integrator
% - Default model initial conditions are used to initialize optimization.
% opspec.States(14).Min = 0;
% opspec.States(14).Max = 1;

%% Set the constraints on the inputs in the model.
% - The defaults for all inputs are Known = false, Min = -Inf, and
% Max = Inf.

% Input (1) - SolarInverter_VFreplay/Vref
% - Default model initial conditions are used to initialize optimization.
opspec.Inputs(1).Known = true;

% Input (2) - SolarInverter_VFreplay/Pref
% - Default model initial conditions are used to initialize optimization.
opspec.Inputs(2).Known = true;

opspec.Inputs(3).u = Exp{i}.Vact(1);
opspec.Inputs(4).u = Exp{i}.Pact(1);
opspec.Inputs(5).u = Exp{i}.Qact(1);
opspec.Inputs(6).u = Exp{i}.Fact(1);

%% Set the constraints on the outputs in the model.
% - The defaults for all outputs are Known = false, Min = -Inf, and
% Max = Inf.

% Output (1) - SolarInverter_VFreplay/Utility-scale Solar Plant Controller
opspec.Outputs(1).y = Exp{i}.Pact(1)/Pnom;
opspec.Outputs(1).Known = true;


% Output (2) - SolarInverter_VFreplay/Utility-scale Solar Plant Controller
opspec.Outputs(2).y = -Exp{i}.Qact(1)/Pnom;
opspec.Outputs(2).Known = true;

%% Create the options
opt = findopOptions('OptimizerType','graddescent-elim',...
    'DisplayReport','iter');
opt.OptimizationOptions.Algorithm = 'interior-point';

%% Perform the operating point search.
[op,opreport] = findop(model,opspec,opt);
